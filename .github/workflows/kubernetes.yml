name: Kubernetes

on:
  workflow_dispatch:
  schedule:
    - cron: "0 6 * * *"
  push:
    branches:
      - main
    paths:
      - .github/workflows/kubernetes.yml
      - deploy/kubectl/**
      - deploy/helm/**
      - deploy/k3se/**

jobs:
  cluster:
    name: Cluster
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        environment:
          - dktil01
          - deflf01
          - deflf02
    environment:
      name: ${{ matrix.environment }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Install private key
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519

      - name: Deploy k3s
        uses: nicklasfrahm/k3se@main
        with:
          command: up deploy/k3se/${{ matrix.environment }}.yaml

      - name: Create secret for kubeconfig
        run: |
          echo ${{ secrets.PERSONAL_ACCESS_TOKEN }} | gh auth login --with-token
          gh secret set KUBECONFIG -r ${{ github.repository }} -e ${{ matrix.environment }} < ~/.kube/config

      - name: Uninstall private key
        run: rm ~/.ssh/id_ed25519

  traefik:
    name: Ingress controller
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs:
      - cluster
    strategy:
      fail-fast: false
      matrix:
        environment:
          - dktil01
          - deflf01
          - deflf02
    environment:
      name: ${{ matrix.environment }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Install kubectl
        uses: azure/setup-kubectl@v1

      - name: Install helm
        uses: azure/setup-helm@v1

      - name: Set up kubeconfig
        run: |
          mkdir -m 700 -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Install traefik
        run: |
          kubectl create ns traefik --dry-run=client -o=yaml | kubectl apply -f -
          helm dep update deploy/helm/traefik
          helm upgrade -i -n traefik traefik deploy/helm/traefik

  cert-manager:
    name: Certificate manager
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs:
      - traefik
    strategy:
      fail-fast: false
      matrix:
        environment:
          - dktil01
          - deflf01
          - deflf02
    environment:
      name: ${{ matrix.environment }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Install kubectl
        uses: azure/setup-kubectl@v1

      - name: Install helm
        uses: azure/setup-helm@v1

      - name: Set up kubeconfig
        run: |
          mkdir -m 700 -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Install cert-manager
        run: |
          kubectl create ns cert-manager --dry-run=client -o=yaml | kubectl apply -f -
          helm dep update deploy/helm/cert-manager
          helm upgrade -i -n cert-manager cert-manager deploy/helm/cert-manager
          kubectl apply -f deploy/kubectl/cert-manager.yaml
