apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: traefik
spec:
  generators:
    - list:
        elements:
          {{- range .Values.clusters.ingress }}
          - cluster: {{ . }}
          {{- end }}
  template:
    metadata:
      name: {{ printf "{{cluster}}-traefik" | quote }}
    spec:
      project: default
      destination:
        name: {{ printf "{{cluster}}" | quote }}
        namespace: traefik
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
      source:
        repoURL: https://traefik.github.io/charts
        chart: traefik
        targetRevision: "{{ .Values.versions.traefik }}"
        helm:
          releaseName: traefik
          values: |
            ingressClass:
              enabled: yes
              isDefaultClass: yes

            service:
              enabled: yes
              type: LoadBalancer
              single: false

            resources:
              requests:
                cpu: 250m
                memory: 256Mi
              limits:
                cpu: 1000m
                memory: 1024Mi

            autoscaling:
              enabled: true
              minReplicas: 1
              maxReplicas: 10
              metrics:
                - type: Resource
                  resource:
                    name: memory
                    target:
                      type: Utilization
                      averageUtilization: 75
                - type: Resource
                  resource:
                    name: cpu
                    target:
                      type: Utilization
                      averageUtilization: 75

            ports:
              traefik:
                port: 9000
                expose: no
                exposedPort: 9000
                protocol: TCP
              web:
                port: 8080
                expose: yes
                exposedPort: 80
                protocol: TCP
                redirectTo: websecure
              websecure:
                port: 8443
                expose: yes
                exposedPort: 443
                protocol: TCP
                tls:
                  enabled: yes

            providers:
              kubernetesIngress:
                publishedService:
                  enabled: true
